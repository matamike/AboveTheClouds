//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputSystem/InputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem"",
    ""maps"": [
        {
            ""name"": ""Game"",
            ""id"": ""130ea896-a211-4c1e-8f22-c4cc3e1ece65"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""e0064e76-624d-4051-996e-98228e1ac80b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""b8eeacbe-7fee-4437-abc2-d0cc10556d75"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1efb9428-72a0-4385-9bcf-d269c8387880"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialMove_1"",
                    ""type"": ""Button"",
                    ""id"": ""cddbf314-3c58-43e9-8d41-a82e9d47f245"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialMove_2"",
                    ""type"": ""Button"",
                    ""id"": ""74a01402-30f0-460f-beab-83cdea3ab47c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialMove_3"",
                    ""type"": ""Button"",
                    ""id"": ""e41f3be8-2958-4f6b-82a9-cddd535a461f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialMove_4"",
                    ""type"": ""Button"",
                    ""id"": ""b76652d0-8605-4f7c-833c-4f023c477e69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""38b6c625-a101-4761-b0ed-5e6e7857855e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2f0c312d-8517-49ad-a374-25e89d4e5c00"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""87f23170-dd67-48d0-a76f-577b63381629"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fb794e4e-3d3c-4189-ab4e-b584b72c5129"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""18ea741b-eb8e-4764-97f2-ae8791649ecb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""df4c0e16-41cd-4b19-ae1a-124d12b46069"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5278cd4-5eb8-4f47-a6f0-97d31567fe40"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a13bc713-888e-41da-8090-222e603da53a"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialMove_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b48a1426-740c-48fb-b0ef-f2503d1f396b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialMove_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ccc1e70-2b20-47a1-9232-e7a04bb63df4"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialMove_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bdf6cdb-ec6b-4f53-b94f-77e4b7c318b7"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialMove_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Game
        m_Game = asset.FindActionMap("Game", throwIfNotFound: true);
        m_Game_Move = m_Game.FindAction("Move", throwIfNotFound: true);
        m_Game_Sprint = m_Game.FindAction("Sprint", throwIfNotFound: true);
        m_Game_Jump = m_Game.FindAction("Jump", throwIfNotFound: true);
        m_Game_SpecialMove_1 = m_Game.FindAction("SpecialMove_1", throwIfNotFound: true);
        m_Game_SpecialMove_2 = m_Game.FindAction("SpecialMove_2", throwIfNotFound: true);
        m_Game_SpecialMove_3 = m_Game.FindAction("SpecialMove_3", throwIfNotFound: true);
        m_Game_SpecialMove_4 = m_Game.FindAction("SpecialMove_4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Game
    private readonly InputActionMap m_Game;
    private IGameActions m_GameActionsCallbackInterface;
    private readonly InputAction m_Game_Move;
    private readonly InputAction m_Game_Sprint;
    private readonly InputAction m_Game_Jump;
    private readonly InputAction m_Game_SpecialMove_1;
    private readonly InputAction m_Game_SpecialMove_2;
    private readonly InputAction m_Game_SpecialMove_3;
    private readonly InputAction m_Game_SpecialMove_4;
    public struct GameActions
    {
        private @InputSystem m_Wrapper;
        public GameActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Game_Move;
        public InputAction @Sprint => m_Wrapper.m_Game_Sprint;
        public InputAction @Jump => m_Wrapper.m_Game_Jump;
        public InputAction @SpecialMove_1 => m_Wrapper.m_Game_SpecialMove_1;
        public InputAction @SpecialMove_2 => m_Wrapper.m_Game_SpecialMove_2;
        public InputAction @SpecialMove_3 => m_Wrapper.m_Game_SpecialMove_3;
        public InputAction @SpecialMove_4 => m_Wrapper.m_Game_SpecialMove_4;
        public InputActionMap Get() { return m_Wrapper.m_Game; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
        public void SetCallbacks(IGameActions instance)
        {
            if (m_Wrapper.m_GameActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_GameActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnMove;
                @Sprint.started -= m_Wrapper.m_GameActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnSprint;
                @Jump.started -= m_Wrapper.m_GameActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnJump;
                @SpecialMove_1.started -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_1;
                @SpecialMove_1.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_1;
                @SpecialMove_1.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_1;
                @SpecialMove_2.started -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_2;
                @SpecialMove_2.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_2;
                @SpecialMove_2.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_2;
                @SpecialMove_3.started -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_3;
                @SpecialMove_3.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_3;
                @SpecialMove_3.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_3;
                @SpecialMove_4.started -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_4;
                @SpecialMove_4.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_4;
                @SpecialMove_4.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnSpecialMove_4;
            }
            m_Wrapper.m_GameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @SpecialMove_1.started += instance.OnSpecialMove_1;
                @SpecialMove_1.performed += instance.OnSpecialMove_1;
                @SpecialMove_1.canceled += instance.OnSpecialMove_1;
                @SpecialMove_2.started += instance.OnSpecialMove_2;
                @SpecialMove_2.performed += instance.OnSpecialMove_2;
                @SpecialMove_2.canceled += instance.OnSpecialMove_2;
                @SpecialMove_3.started += instance.OnSpecialMove_3;
                @SpecialMove_3.performed += instance.OnSpecialMove_3;
                @SpecialMove_3.canceled += instance.OnSpecialMove_3;
                @SpecialMove_4.started += instance.OnSpecialMove_4;
                @SpecialMove_4.performed += instance.OnSpecialMove_4;
                @SpecialMove_4.canceled += instance.OnSpecialMove_4;
            }
        }
    }
    public GameActions @Game => new GameActions(this);
    public interface IGameActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSpecialMove_1(InputAction.CallbackContext context);
        void OnSpecialMove_2(InputAction.CallbackContext context);
        void OnSpecialMove_3(InputAction.CallbackContext context);
        void OnSpecialMove_4(InputAction.CallbackContext context);
    }
}
